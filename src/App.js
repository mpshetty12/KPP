import React, { useState, useEffect } from 'react';
import './App.css';
import { initializeApp } from 'firebase/app';
import {
  getFirestore,
  collection,
  addDoc,
  getDocs,
} from 'firebase/firestore';

// Firebase config (replace with your own)
const firebaseConfig = {
  apiKey: "AIzaSyC5ts8XqlBqYFvLRJ-8RyYMPsyBTHd0PK0",
  authDomain: "kpl-2025-d10a5.firebaseapp.com",
  projectId: "kpl-2025-d10a5",
  storageBucket: "kpl-2025-d10a5.appspot.com",
  messagingSenderId: "82956843654",
  appId: "1:82956843654:web:c6c3decc8935bd0c472f07",
  // measurementId: "G-EMJQYXKXTB"
};


// Init Firebase
const app = initializeApp(firebaseConfig);
const db = getFirestore(app);


const App = () => {
  const [currentView, setCurrentView] = useState('home');
  const [registrations, setRegistrations] = useState([]);
  const [adminPassword, setAdminPassword] = useState('');
  const [isAdminAuthenticated, setIsAdminAuthenticated] = useState(false);  

  // Fetch data when admin logs in
  useEffect(() => {
    if (isAdminAuthenticated) {
      fetchRegistrations();
    }
  }, [isAdminAuthenticated]);

  const [gameTypes, setGameTypes] = useState([]);

  useEffect(() => {
    const fetchGameTypes = async () => {
      try {
        const snapshot = await getDocs(collection(db, "gameTypes"));
        const data = snapshot.docs.map(doc => doc.data());
        setGameTypes(data);
      } catch (error) {
        console.error("Error fetching game types:", error);
      }
    };

    fetchGameTypes();
  }, []);

  const fetchRegistrations = async () => {
    try {
      const querySnapshot = await getDocs(collection(db, 'registrations'));
      const data = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
      setRegistrations(data);
    } catch (error) {
      console.error('Error fetching data:', error);
    }
  };

  const handleAdminLogin = () => {
    if (adminPassword === '9080') {
      setIsAdminAuthenticated(true);
      setCurrentView('admin');
    } else {
      alert('‡≤Ö‡≤Æ‡≤æ‡≤®‡≥ç‡≤Ø ‡≤™‡≤æ‡≤∏‡≥ç‚Äå‡≤µ‡≤∞‡≥ç‡≤°‡≥ç! (Invalid Password!)');
    }
  };

  const handleRegistration = async (formData) => {
    try {
      const data = { ...formData, registrationDate: new Date().toLocaleDateString() };
      await addDoc(collection(db, 'registrations'), data);
      alert('‡≤®‡≥ã‡≤Ç‡≤¶‡≤£‡≤ø ‡≤Ø‡≤∂‡≤∏‡≥ç‡≤µ‡≤ø‡≤Ø‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü! (Registration Successful!)');
      setCurrentView('home');
    } catch (err) {
      alert('‡≤®‡≥ã‡≤Ç‡≤¶‡≤£‡≤ø ‡≤µ‡≤ø‡≤´‡≤≤‡≤µ‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü! (Registration Failed)');
      console.error(err);
    }
  };


  const HomePage = () => (
    <div className="home-page">
      <div className="header">
        <div className="logo-section">
          <h1 className="main-title">‡≤ó‡≤Æ‡≥ç‡≤Æ‡≤§‡≥ç‡≤§‡≥ç</h1>
          {/* <button onClick={() => createGentsGamesDocument()}>Create Ladies Games</button> */}
          <p className="subtitle">‡≤ï‡≥Å‡≤Ç‡≤¶‡≤æ‡≤™‡≥ç‡≤∞ ‡≤ï‡≤®‡≥ç‡≤®‡≤° ‡≤∏‡≤Ç‡≤∏‡≥ç‡≤ï‡≥ç‡≤∞‡≤§‡≤ø ‡≤™‡≥ç‡≤∞‡≤§‡≤ø‡≤∑‡≥ç‡≤†‡≤æ‡≤® ‡≤¨‡≥à‡≤Ç‡≤¶‡≥Ç‡≤∞‡≥Å
          ‡≤™‡≥ç‡≤∞‡≤∏‡≥ç‡≤§‡≥Å‡≤§‡≤ø</p>
          <br/>
          
        </div>
        <div className="date-info">
          <span className="date">3 ‡≤Ü‡≤ó‡≤∏‡≥ç‡≤ü‡≥ç 2025  ‡≤≠‡≤æ‡≤®‡≥Å‡≤µ‡≤æ‡≤∞</span>
          <span className="day">‡≤®‡≥Ü‡≤≤‡≥ç‡≤Ø‡≤æ‡≤°‡≤ø ‡≤¨‡≥à‡≤≤‡≥ç ‡≤π‡≤æ‡≤ó‡≥Ç ‡≤ú‡≥Ü ‡≤é‡≤®‡≥ç ‡≤Ü‡≤∞‡≥ç ‡≤∏‡≤≠‡≤æ‡≤Ç‡≤ó‡≤£ NH 66 ‡≤Ø‡≤°‡≥ç‡≤§‡≤∞‡≥Ü ‡≤¨‡≥à‡≤Ç‡≤¶‡≥Ç‡≤∞‡≥Å</span>
          <span className="day">‡≤Æ‡≤æ‡≤π‡≤ø‡≤§‡≤ø‡≤ó‡≤æ‡≤ó‡≤ø: 9986099687, 9481518382, 9900351095 </span>
        </div>
      </div>
      
      <div className="menu-container">
        <div className="menu-grid">
         <div className="menu-card" onClick={() => setCurrentView('registration')}>
            <h3>‡≤∏‡≤æ‡≤Ç‡≤∏‡≥ç‡≤ï‡≥ç‡≤∞‡≤§‡≤ø‡≤ï & ‡≤Ü‡≤ü‡≥ã‡≤ü ‡≤∏‡≥ç‡≤´‡≤∞‡≥ç‡≤ß‡≥Ü‡≤ó‡≤≥‡≤ø‡≤ó‡≥Ü ‡≤®‡≥ã‡≤Ç‡≤¶‡≤£‡≤ø</h3>
            <p>Registration for events</p>
          </div>
          <div className="menu-card" onClick={() => setCurrentView('kambala')}>
            <h3>‡≤ï‡≤Ç‡≤¨‡≤≥‡≤ï‡≥ç‡≤ï‡≥Ü ‡≤®‡≥ã‡≤Ç‡≤¶‡≤£‡≤ø</h3>
            <p>Kmabala Registration</p>
          </div>
          
          <div className="menu-card" onClick={() => setCurrentView('menu')}>
            <h3>‡≤Ü‡≤ü‡≤¶ ‡≤¨‡≤ó‡≥ç‡≤ó‡≥Ü ‡≤Æ‡≤æ‡≤π‡≤ø‡≤§‡≤ø</h3>
            <p>Games Information</p>
          </div>
          <div className="menu-card" onClick={() => setCurrentView('admin-login')}>
            <h3>‡≤Ö‡≤°‡≥ç‡≤Æ‡≤ø‡≤®‡≥ç ‡≤µ‡≥ç‡≤Ø‡≥Ç</h3>
            <p>Admin View</p>
          </div>
        </div>
      </div>
      
      <div className="footer-image">
        <div className="kids-running">
          <span>üèÉ‚Äç‚ôÇÔ∏èüèÉ‚Äç‚ôÄÔ∏èüèÉ‚Äç‚ôÇÔ∏èüèÉ‚Äç‚ôÄÔ∏èüèÉ‚Äç‚ôÇÔ∏è</span>
        </div>
        <p className="footer-text">‡≤≠‡≤æ‡≤∑‡≤æ ‡≤™‡≥ç‡≤∞‡≥Ä‡≤§‡≤ø‡≤Ø‡≤≤‡≥ç‡≤≤‡≤ø ‡≤Æ‡≥Å‡≤Ç‡≤ó‡≤æ‡≤∞‡≥Å ‡≤Æ‡≤≥‡≥Ü‡≤Ø‡≤≤‡≥ç‡≤≤‡≤ø ‡≤®‡≤Æ‡≥ç‡≤Æ‡≥Ç‡≤∞‡≥Å ‡≤ï‡≥Ü‡≤∏‡≤∞‡≥Å ‡≤ó‡≤¶‡≥ç‡≤¶‡≥Ü‡≤Ø‡≤≤‡≥ç‡≤≤‡≤ø...   ‡≤≠‡≤æ‡≤∑‡≤ø ‡≤Ö‡≤≤‡≥ç‡≤≤, ‡≤¨‡≤¶‡≥ç‡≤ï‡≥ç!</p>
        <br />
        <p>¬© 2025 mpshetty. All rights reserved.        </p>
      </div>
    </div>
  );

  const MainMenu = () => (
    <div className="page">
      <div className="page-header">
        <button className="back-btn" onClick={() => setCurrentView('home')}>‚Üê ‡≤π‡≤ø‡≤Ç‡≤¶‡≥Ü</button>
        <h2>‡≤Ü‡≤ü‡≤¶ ‡≤¨‡≤ó‡≥ç‡≤ó‡≥Ü ‡≤Æ‡≤æ‡≤π‡≤ø‡≤§‡≤ø</h2>
      </div>
  
      <div className="menu-list">
        <div className="menu-item">
          <h3>‡≤®‡≤ø‡≤Æ‡≥ç‡≤ó‡≤æ‡≤Ø‡≥ç ‡≤®‡≤Æ‡≥ç ‡≤®‡≤Æ‡≥ç‡≤®‡≤ø ‡≤∏‡≥ç‡≤™‡≤∞‡≥ç‡≤ß‡≥Ü‡≤ó‡≤≥‡≥Å:</h3>
  
          <h4>‡≤Æ‡≤π‡≤ø‡≤≥‡≥Ü‡≤Ø‡≤∞‡≤ø‡≤ó‡≥Ü:</h4>
          <ul>
            <li>‡≤π‡≤ó‡≥ç‡≤ó‡≤ú‡≤ó‡≥ç‡≤ó‡≤æ‡≤ü</li>
            <li>‡≤•‡≥ç‡≤∞‡≥ã ‡≤¨‡≤æ‡≤≤‡≥ç</li>
            <li>‡≤ï‡≥Ü‡≤∏‡≤∞‡≥ç ‡≤ó‡≥ç‡≤Ø‡≤¶‡≥ç‡≤¶‡≤ø ‡≤ì‡≤ü</li>
            <li>‡≤Æ‡≤°‡≥ç‡≤≤‡≥ç ‡≤®‡≥á‡≤Ø‡≥Å‡≤¶‡≥ç</li>
            <li>‡≤Ö‡≤°‡≤ø‡≤ï‡≥Ü ‡≤π‡≤æ‡≤≥‡≥ç‡≤Ø‡≤Ç‡≤ó‡≥ç ‡≤é‡≤≥‡≥Å‡≤¶‡≥ç</li>
            <li>‡≤§‡≥Ü‡≤Ç‡≤ó‡≤ø‡≤® ‡≤ö‡≥ç‡≤µ‡≤æ‡≤Ç‡≤ó‡≤ø ‡≤Æ‡≤æ‡≤¶‡≤∞‡≤ø ‡≤§‡≤Ø‡≤æ‡≤∞‡≥ç‡≤∏‡≥Å‡≤¶‡≥ç</li>
            <li>‡≤ï‡≥ä‡≤ü‡≥ç‡≤ü‡≤ø ‡≤∏‡≥Ü‡≤°‡≥Å‡≤¶‡≥ç</li>
            <li>‡≤π‡≥Ç‡≤Æ‡≤æ‡≤≤‡≤ø ‡≤ï‡≤ü‡≥ç‡≤ü‡≥Å‡≤¶‡≥ç</li>
            <li>‡≤ó‡≥Å‡≤°‡≥ç‡≤® ‡≤Ü‡≤ü</li>
            <li>‡≤ö‡≤®‡≥ç‡≤®‡≥Ü‡≤Æ‡≤£‡≤ø ‡≤Ü‡≤ü</li>
            <li>‡≤∏‡≤æ‡≤Ç‡≤™‡≥ç‡≤∞‡≤¶‡≤æ‡≤Ø‡≤ø‡≤ï ‡≤ó‡≥Ä‡≤§‡≥Ü ‡≤ó‡≤æ‡≤Ø‡≤®</li>
            <li>‡≤∞‡≤∏‡≤™‡≥ç‡≤∞‡≤∂‡≥ç‡≤®‡≥Ü</li>
          </ul>
  
          <h4>‡≤™‡≥Å‡≤∞‡≥Å‡≤∑‡≤∞‡≤ø‡≤ó‡≥Ü:</h4>
          <ul>
            <li>‡≤π‡≤ó‡≥ç‡≤ó‡≤ú‡≤ó‡≥ç‡≤ó‡≤æ‡≤ü</li>
            <li>‡≤µ‡≤æ‡≤≤‡≤ø‡≤¨‡≤æ‡≤≤‡≥ç</li>
            <li>‡≤ï‡≤¨‡≤°‡≥ç‡≤°‡≤ø</li>
            <li>‡≤ï‡≥Ü‡≤∏‡≤∞‡≥ç ‡≤ó‡≥ç‡≤Ø‡≤¶‡≥ç‡≤¶‡≤ø ‡≤ì‡≤ü</li>
            <li>‡≤Ö‡≤°‡≤ø‡≤ï‡≥Ü ‡≤π‡≤æ‡≤≥‡≥ç‡≤Ø‡≤Ç‡≤ó‡≥ç ‡≤é‡≤≥‡≥Å‡≤¶‡≥ç</li>
            <li>‡≤§‡≥Ü‡≤Ç‡≤ó‡≤ø‡≤® ‡≤ö‡≥ç‡≤µ‡≤æ‡≤Ç‡≤ó‡≤ø ‡≤Æ‡≤æ‡≤¶‡≤∞‡≤ø ‡≤§‡≤Ø‡≤æ‡≤∞‡≥ç‡≤∏‡≥Å‡≤¶‡≥ç</li>
            <li>‡≤¨‡≥Ä‡≤∏‡≥ç ‡≤¨‡≤≤‡≤ø - ‡≤∞‡≥å‡≤Ç‡≤°‡≥ç ‡≤¨‡≥Å‡≤∏‡≥Å‡≤¶‡≥ç</li>
            <li>‡≤ö‡≤ø‡≤ü‡≥ç ‡≤¨‡≤ø‡≤≤‡≥ç ‡≤∂‡≥Ç‡≤ü‡≤ø‡≤Ç‡≤ó‡≥ç</li>
            <li>‡≤ö‡≤®‡≥ç‡≤®‡≥Ü‡≤Æ‡≤£‡≤ø ‡≤Ü‡≤ü</li>
            <li>‡≤∏‡≤æ‡≤Ç‡≤™‡≥ç‡≤∞‡≤¶‡≤æ‡≤Ø‡≤ø‡≤ï ‡≤ó‡≥Ä‡≤§‡≥Ü ‡≤ó‡≤æ‡≤Ø‡≤®</li>
            <li>‡≤∞‡≤∏‡≤™‡≥ç‡≤∞‡≤∂‡≥ç‡≤®‡≥Ü</li>
          </ul>
  
          <h4>‡≤Æ‡≤ï‡≥ç‡≤ï‡≤≥‡≤ø‡≤ó‡≥Ü:</h4>
          <ul>
            <li>‡≤ï‡≥Ü‡≤∏‡≤∞‡≥ç ‡≤ó‡≥ç‡≤Ø‡≤¶‡≥ç‡≤¶‡≤ø ‡≤ì‡≤ü</li>
            <li>‡≤¨‡≥Ü‡≤®‡≥ç ‡≤ö‡≥Ü‡≤Ç‡≤°‡≥ç ‡≤Ü‡≤ü</li>
            <li>‡≤≤‡≤ø‡≤Ç‡≤¨‡≥Å ‡≤ö‡≤Æ‡≤ö ‡≤ì‡≤ü</li>
            <li>‡≤ó‡≥Ç‡≤ü‡≤ï‡≥ç‡≤ï‡≥Ü ‡≤∏‡≥Å‡≤§‡≥ç‡≤§‡≤ø ‡≤ì‡≤°‡≥Å‡≤¶‡≥ç</li>
            <li>‡≤Ö‡≤°‡≤ø‡≤ï‡≥Ü ‡≤π‡≤æ‡≤≥‡≥ç‡≤Ø‡≤Ç‡≤ó‡≥ç ‡≤é‡≤≥‡≥Å‡≤¶‡≥ç</li>
            <li>‡≤§‡≥Ü‡≤Ç‡≤ó‡≤ø‡≤® ‡≤ö‡≥ç‡≤µ‡≤æ‡≤Ç‡≤ó‡≤ø ‡≤Æ‡≤æ‡≤¶‡≤∞‡≤ø ‡≤§‡≤Ø‡≤æ‡≤∞‡≥ç‡≤∏‡≥Å‡≤¶‡≥ç</li>
            <li>‡≤≠‡≤æ‡≤∑‡≤£ ‚Äî ‡≤µ‡≤ø‡≤∑‡≤Ø: ‡≤ï‡≥Å‡≤Ç‡≤¶‡≤æ‡≤™‡≥ç‡≤∞ ‡≤ï‡≤®‡≥ç‡≤®‡≤° ‡≤ó‡≤æ‡≤¶‡≥Ü ‡≤µ‡≤ø‡≤∏‡≥ç‡≤§‡≤∞‡≤£‡≥Ü</li>
            <li>‡≤ö‡≤ø‡≤§‡≥ç‡≤∞‡≤ï‡≤≤‡≥Ü</li>
            <li>‡≤õ‡≤¶‡≥ç‡≤Æ‡≤µ‡≥á‡≤∑</li>
            <li>‡≤∞‡≤∏‡≤™‡≥ç‡≤∞‡≤∂‡≥ç‡≤®‡≥Ü</li>
          </ul>
        </div>
  
        <div className="menu-item">
          <h3>‡≤®‡≤ø‡≤Ø‡≤Æ‡≤ó‡≤≥‡≥Å:</h3>
          <ul>
            <li>‡≤é‡≤≤‡≥ç‡≤≤‡≤æ ‡≤µ‡≤ø‡≤ú‡≥á‡≤§‡≤∞‡≤ø‡≤ó‡≥Ç ‡≤Ü‡≤ï‡≤∞‡≥ç‡≤∑‡≤ï ‡≤¨‡≤π‡≥Å‡≤Æ‡≤æ‡≤® & ‡≤™‡≥ç‡≤∞‡≤Æ‡≤æ‡≤£‡≤™‡≤§‡≥ç‡≤∞ ‡≤®‡≥Ä‡≤°‡≤ø ‡≤ó‡≥å‡≤∞‡≤µ‡≤ø‡≤∏‡≤≤‡≤æ‡≤ó‡≥Å‡≤µ‡≥Å‡≤¶‡≥Å</li>
            <li>‡≤¨‡≥à‡≤Ç‡≤¶‡≥Ç‡≤∞‡≥Å ‡≤µ‡≤ø‡≤ß‡≤æ‡≤®‡≤∏‡≤≠‡≤æ ‡≤ï‡≥ç‡≤∑‡≥á‡≤§‡≥ç‡≤∞ ‡≤µ‡≥ç‡≤Ø‡≤æ‡≤™‡≥ç‡≤§‡≤ø‡≤Ø ‡≤®‡≤æ‡≤ó‡≤∞‡≤ø‡≤ï‡≤∞‡≤ø‡≤ó‡≥Ü ‡≤≠‡≤æ‡≤ó‡≤µ‡≤π‡≤ø‡≤∏‡≤≤‡≥Å  ‡≤Ö‡≤µ‡≤ï‡≤æ‡≤∂</li>
            <li>‡≤Ü‡≤ß‡≤æ‡≤∞‡≥ç ‡≤ï‡≤æ‡≤∞‡≥ç‡≤°‡≥ç ‡≤ï‡≤°‡≥ç‡≤°‡≤æ‡≤Ø</li>
            <li>‡≤Æ‡≤ï‡≥ç‡≤ï‡≤≥ ‡≤ï‡≥ç‡≤∞‡≥Ä‡≤°‡≥Ü ‡≤π‡≤æ‡≤ó‡≥Ç ‡≤∏‡≥ç‡≤™‡≤∞‡≥ç‡≤ß‡≥Ü‡≤ó‡≤≥‡≤ø‡≤ó‡≥Ü ‡≤¨‡≥Ü‡≤≥‡≤ø‡≤ó‡≥ç‡≤ó‡≥Ü ‡≤ó‡≤Ç‡≤ü‡≥Ü 9‡≤∞ ‡≤§‡≤®‡≤ï ‡≤®‡≥ä‡≤Ç‡≤¶‡≤£‡≤ø‡≤ó‡≥Ü ‡≤Ö‡≤µ‡≤ï‡≤æ‡≤∂</li>
            <li>‡≤∏‡≥ç‡≤™‡≤∞‡≥ç‡≤ß‡≥Ü‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤¨‡≥á‡≤ó‡≤®‡≥Ü ‡≤™‡≥ç‡≤∞‡≤æ‡≤∞‡≤Ç‡≤≠‡≤ø‡≤∏‡≥Å‡≤µ‡≥Å‡≤¶‡≤∞‡≤ø‡≤Ç‡≤¶ ‡≤é‡≤≤‡≥ç‡≤≤‡≤æ ‡≤∏‡≥ç‡≤™‡≤∞‡≥ç‡≤ß‡≤æ‡≤≥‡≥Å‡≤ó‡≤≥‡≥Å ‡≤¨‡≥Ü‡≤≥‡≤ø‡≤ó‡≥ç‡≤ó‡≥Ü‡≤Ø‡≥á ‡≤â‡≤™‡≤∏‡≥ç‡≤•‡≤ø‡≤§‡≤∞‡≤ø‡≤∞‡≥Å‡≤µ‡≥Å‡≤¶‡≥Å</li>
            <li>‡≤µ‡≤ø‡≤¶‡≥ç‡≤Ø‡≤æ‡≤∞‡≥ç‡≤•‡≤ø‡≤ó‡≤≥‡≥Å ‡≤™‡≥ã‡≤∑‡≤ï‡≤∞‡≥ä‡≤Ç‡≤¶‡≤ø‡≤ó‡≥Ü ‡≤π‡≤æ‡≤ú‡≤∞‡≤æ‡≤ó‡≥Å‡≤µ‡≥Å‡≤¶‡≥Å ‡≤π‡≤æ‡≤ó‡≥Ç ‡≤∏‡≥Å‡≤∞‡≤ï‡≥ç‡≤∑‡≤ø‡≤§ ‡≤∏‡≥ç‡≤•‡≤≥‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø ‡≤®‡≤ø‡≤Ç‡≤§‡≥Å ‡≤ï‡≤æ‡≤∞‡≥ç‡≤Ø‡≤ï‡≥ç‡≤∞‡≤Æ ‡≤µ‡≥Ä‡≤ï‡≥ç‡≤∑‡≤ø‡≤∏‡≥Å‡≤µ‡≥Å‡≤¶‡≥Å ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤≠‡≤æ‡≤ó‡≤µ‡≤π‡≤ø‡≤∏‡≥Å‡≤µ‡≥Å‡≤¶‡≥Å</li>
            <li>‡≤∏‡≥ç‡≤™‡≤∞‡≥ç‡≤ß‡≥Ü‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤ï‡≥Ü‡≤∏‡≤∞‡≥Å‡≤ó‡≤¶‡≥ç‡≤¶‡≥Ü ‡≤π‡≤æ‡≤ó‡≥Ç ‡≤π‡≤æ‡≤≤‡≥ç‚Äå‡≤® ‡≤π‡≥ä‡≤∞‡≤æ‡≤Ç‡≤ó‡≤£ ‡≤π‡≤æ‡≤ó‡≥Ç ‡≤í‡≤≥‡≤æ‡≤Ç‡≤ó‡≤£‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø ‡≤®‡≤°‡≥Ü‡≤∏‡≤≤‡≤æ‡≤ó‡≥Å‡≤§‡≥ç‡≤§‡≤¶‡≥Ü</li>
            <li>‡≤®‡≤ø‡≤∞‡≥ç‡≤£‡≤æ‡≤Ø‡≤ï‡≤∞ ‡≤§‡≥Ä‡≤∞‡≥ç‡≤Æ‡≤æ‡≤®‡≤µ‡≥á ‡≤Ö‡≤Ç‡≤§‡≤ø‡≤Æ</li>
            <li>‡≤â‡≤ö‡≤ø‡≤§ ‡≤™‡≥ç‡≤∞‡≤µ‡≥á‡≤∂</li>
          </ul>
          <p>‡≤π‡≥ç‡≤µ‡≤æ‡≤Ø‡≥ç, ‡≤®‡≥Ä‡≤µ‡≥ç ‡≤§‡≤™‡≥ç‡≤¶‡≥á ‡≤¨‡≤∞‡≥ç‡≤ï‡≥ç ‚Äî ‡≤ó‡≤°‡≥ç‡≤ú‡≥ç ‡≤ó‡≤Æ‡≥ç‡≤Æ‡≤§‡≥ç ‡≤Æ‡≤æ‡≤°‡≥ç‡≤µ!</p>
        </div>
  
        <div className="menu-item">
          <h3>‡≤Æ‡≤æ‡≤π‡≤ø‡≤§‡≤ø‡≤ó‡≤æ‡≤ó‡≤ø:</h3>
          <p>9986099687 | 9481518382 | 9900351095</p>
        </div>
      </div>
    </div>
  );
  

  const GameRegistration = (props) => {
    const [gameType, setGameType] = useState('');
    useEffect(() => {
      if (props.yy === 'kambala') {
        setGameType('kambala');
        setSpecificGame('kambala');
      }
    }, [props.yy]);
    
    const [specificGame, setSpecificGame] = useState('');
    const currentGameType = gameTypes.find(g => g.type === gameType);
    const currentGame = currentGameType?.games.find(g => g.id === specificGame);
    useEffect(() => {
      if (gameType === 'kambala') {
        setSpecificGame('kambala'); // default for kambala
      }
    }, [gameType]);
    const [formData, setFormData] = useState({
      name: '',
      phone: '',
      teamName: '',
      place: '',
    });

    const handleInputChange = (e) => {
      setFormData({ ...formData, [e.target.name]: e.target.value });
    };

    const handleSubmit = () => {
      if (!formData.name || !formData.phone || !formData.place) {
        alert('‡≤¶‡≤Ø‡≤µ‡≤ø‡≤ü‡≥ç‡≤ü‡≥Å ‡≤é‡≤≤‡≥ç‡≤≤ ‡≤´‡≥Ä‡≤≤‡≥ç‡≤°‡≥ç‚Äå‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤≠‡≤∞‡≥ç‡≤§‡≤ø ‡≤Æ‡≤æ‡≤°‡≤ø');
        return;
      }
      if ((specificGame === 'volleyball' || specificGame === 'kabaddi' || specificGame === "hagga-jaggata" || specificGame === "throwball" || specificGame === "haggu") && !formData.teamName) {
        alert('‡≤§‡≤Ç‡≤°‡≤¶ ‡≤π‡≥Ü‡≤∏‡≤∞‡≥Å ‡≤Ö‡≤ó‡≤§‡≥ç‡≤Ø‡≤µ‡≤ø‡≤¶‡≥Ü');
        return;
      }
      const registrationData = {
        ...formData,
        gameType,
        specificGame,
        registrationDate: new Date().toLocaleDateString()
      };
      handleRegistration(registrationData);
    };

    return (
      <div className="page">
        <div className="page-header">
          <button className="back-btn" onClick={() => setCurrentView('home')}>‚Üê ‡≤π‡≤ø‡≤Ç‡≤¶‡≥Ü</button>
          <h2>‡≤Ü‡≤ü‡≤¶ ‡≤®‡≥ã‡≤Ç‡≤¶‡≤£‡≤ø</h2>
        </div>
        
        <div className="registration-form">

          <div className="game-type-selector">
            <label>‡≤∏‡≥ç‡≤´‡≤∞‡≥ç‡≤ß‡≥Ü‡≤ó‡≤≥‡≤ø‡≤ó‡≥Ü ‡≤Ü‡≤Ø‡≥ç‡≤ï‡≥Ü ‡≤Æ‡≤æ‡≤°‡≤ø:</label>
            <select value={gameType} onChange={(e) => {
              setGameType(e.target.value);
              setSpecificGame('');
            }}
            disabled={!!specificGame}>
            <option value="" disabled>‡≤Ü‡≤Ø‡≥ç‡≤ï‡≥Ü ‡≤Æ‡≤æ‡≤°‡≤ø</option>
            {gameTypes
              .filter(g => {
                if (!props.yy) {
                  return g.type !== 'kambala'; // hide kambala only when yy is empty
                }
              return true; // include all types otherwise
              })
              .map(g => (
                <option key={g.type} value={g.type}>
                    {g.label}
                </option>
            ))}

            </select>
          </div>


          {currentGameType && currentGameType.games.length > 0 && (
  <div className="specific-game-selector">
    <label>‡≤∏‡≥ç‡≤´‡≤∞‡≥ç‡≤ß‡≥Ü ‡≤Ü‡≤Ø‡≥ç‡≤ï‡≥Ü ‡≤Æ‡≤æ‡≤°‡≤ø:</label>
    <select value={specificGame} onChange={(e) => setSpecificGame(e.target.value)}>
      <option value="">‡≤Ü‡≤Ø‡≥ç‡≤ï‡≥Ü ‡≤Æ‡≤æ‡≤°‡≤ø</option>
      {currentGameType.games.map(game => (
        <option key={game.id} value={game.id}>{game.nameKn}</option>
      ))}
    </select>
  </div>
)}
          {gameType === 'kambala' && (
            <div>
              {/* You can show something else here if needed */}
              <p>‡≤ï‡≤Ç‡≤¨‡≤≥ ‡≤∏‡≥ç‡≤™‡≤∞‡≥ç‡≤ß‡≥Ü ‡≤Ü‡≤Ø‡≥ç‡≤ï‡≥Ü‡≤Æ‡≤æ‡≤°‡≤≤‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü</p>
            </div>
          )}
          
          

          {specificGame && (
            
            <div className="registration-details">
              <div className="form-group">
                <label>‡≤π‡≥Ü‡≤∏‡≤∞‡≥Å (Name):</label>
                <input
                  type="text"
                  name="name"
                  value={formData.name}
                  onChange={handleInputChange}
                  required
                />
              </div>

              {/* <div className="form-group">
                <label>‡≤µ‡≤Ø‡≤∏‡≥ç‡≤∏‡≥Å (Age):</label>
                <input
                  type="number"
                  name="age"
                  value={formData.age}
                  onChange={handleInputChange}
                  required
                />
              </div> */}

              <div className="form-group">
                <label>‡≤´‡≥ã‡≤®‡≥ç ‡≤∏‡≤Ç‡≤ñ‡≥ç‡≤Ø‡≥Ü (Phone):</label>
                <input
                  type="tel"
                  name="phone"
                  value={formData.phone}
                  onChange={handleInputChange}
                  required
                />
              </div>

              <div className="form-group">
                <label>‡≤∏‡≥ç‡≤•‡≤≥ (Place):</label>
                <input
                  type="text"
                  name="place"
                  value={formData.place}
                  onChange={handleInputChange}
                  required
                />
              </div>

              {(specificGame === 'volleyball' || specificGame === 'kabaddi' || specificGame === "hagga-jaggata" || specificGame === "throwball" || specificGame === "haggu") && (
                <>
                  <div className="form-group">
                    <label>‡≤§‡≤Ç‡≤°‡≤¶ ‡≤π‡≥Ü‡≤∏‡≤∞‡≥Å (Team Name):</label>
                    <input
                      type="text"
                      name="teamName"
                      value={formData.teamName}
                      onChange={handleInputChange}
                      required
                    />
                  </div>
                  {/* <div className="form-group">
                    <label>‡≤§‡≤Ç‡≤°‡≤¶ ‡≤∏‡≤¶‡≤∏‡≥ç‡≤Ø‡≤∞‡≥Å (Team Members):</label>
                    <textarea
                      name="teamMembers"
                      value={formData.teamMembers}
                      onChange={handleInputChange}
                      placeholder="‡≤∏‡≤¶‡≤∏‡≥ç‡≤Ø‡≤∞ ‡≤π‡≥Ü‡≤∏‡≤∞‡≥Å‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤™‡≥ç‡≤∞‡≤§‡≥ç‡≤Ø‡≥á‡≤ï ‡≤∏‡≤æ‡≤≤‡≤ø‡≤®‡≤≤‡≥ç‡≤≤‡≤ø ‡≤¨‡≤∞‡≥Ü‡≤Ø‡≤ø‡≤∞‡≤ø"
                      required
                    />
                  </div> */}
                </>
              )}

{currentGame?.note && (
  <div className="form-group">
    <label>{currentGame.note}</label>
  </div>
)}


              <button onClick={handleSubmit} className="submit-btn">‡≤®‡≥ã‡≤Ç‡≤¶‡≤£‡≤ø ‡≤Æ‡≤æ‡≤°‡≤ø</button>
            </div>
          )}
        </div>
      </div>
    );
  };

  const AdminLogin = () => (
    <div className="page">
      <div className="page-header">
        <button className="back-btn" onClick={() => setCurrentView('home')}>‚Üê ‡≤π‡≤ø‡≤Ç‡≤¶‡≥Ü</button>
        <h2>‡≤Ö‡≤°‡≥ç‡≤Æ‡≤ø‡≤®‡≥ç ‡≤≤‡≤æ‡≤ó‡≤ø‡≤®‡≥ç</h2>
      </div>
      <div className="admin-login">
        <div className="form-group">
          <label>‡≤™‡≤æ‡≤∏‡≥ç‚Äå‡≤µ‡≤∞‡≥ç‡≤°‡≥ç (Password):</label>
          <input
            type="password"
            value={adminPassword}
            onChange={(e) => setAdminPassword(e.target.value)}
            placeholder="‡≤™‡≤æ‡≤∏‡≥ç‚Äå‡≤µ‡≤∞‡≥ç‡≤°‡≥ç ‡≤®‡≤Æ‡≥Ç‡≤¶‡≤ø‡≤∏‡≤ø"
          />
        </div>
        <button onClick={handleAdminLogin} className="submit-btn">‡≤≤‡≤æ‡≤ó‡≤ø‡≤®‡≥ç</button>
      </div>
    </div>
  );
  
  const AdminView = () => {
    
    const [selectedGame, setSelectedGame] = useState('');
  
    const gameOptions = Array.from(
      new Set(
        registrations.map(reg => {
          const gameGroup = gameTypes.find(g => g.type === reg.gameType);
          const game = gameGroup?.games.find(g => g.id === reg.specificGame);
          return {
            key: `${reg.gameType}-${reg.specificGame}`,
            label: `${gameGroup?.label || reg.gameType} - ${game?.nameKn || reg.specificGame}`
          };
        })
      )
    );
    
  
    const filteredRegistrations = registrations.filter(
      reg => `${reg.gameType}-${reg.specificGame}` === selectedGame
    );
    
  
    return (
      <div className="page">
        <div className="page-header">
          <button className="back-btn" onClick={() => {
            setCurrentView('home');
            setIsAdminAuthenticated(false);
            setAdminPassword('');
          }}>‚Üê ‡≤π‡≤ø‡≤Ç‡≤¶‡≥Ü</button>
          <h2>‡≤Ö‡≤°‡≥ç‡≤Æ‡≤ø‡≤®‡≥ç ‡≤µ‡≥ç‡≤Ø‡≥Ç - ‡≤®‡≥ã‡≤Ç‡≤¶‡≤£‡≤ø‡≤ó‡≤≥‡≥Å</h2>
        </div>
  
        <div className="admin-content">
          <div className="form-group">
            <label>‡≤Ü‡≤ü ‡≤Ü‡≤Ø‡≥ç‡≤ï‡≥Ü‡≤Æ‡≤æ‡≤°‡≤ø:</label>
            <select
              value={selectedGame}
              onChange={(e) => setSelectedGame(e.target.value)}
            >
              <option value="">‡≤Ü‡≤ü ‡≤Ü‡≤Ø‡≥ç‡≤ï‡≥Ü‡≤Æ‡≤æ‡≤°‡≤ø</option>
  {gameOptions.map((opt, idx) => (
    <option key={idx} value={opt.key}>{opt.label}</option>
  ))}
            </select>
          </div>
  
          {selectedGame && (
            <>
              <h3>‡≤®‡≥ã‡≤Ç‡≤¶‡≤£‡≤ø‡≤ó‡≤≥‡≥Å:</h3>
              {filteredRegistrations.length === 0 ? (
                <p>‡≤à ‡≤Ü‡≤ü‡≤ï‡≥ç‡≤ï‡≥Ü ‡≤Ø‡≤æ‡≤µ‡≥Å‡≤¶‡≥á ‡≤®‡≥ã‡≤Ç‡≤¶‡≤£‡≤ø‡≤ó‡≤≥‡≥Å ‡≤á‡≤≤‡≥ç‡≤≤.</p>
              ) : (
                <div className="registrations-list">
                  {filteredRegistrations.map((reg) => (
                    <div key={reg.id} className="registration-card">
                      <h4>{reg.name}</h4>
                      <p>‡≤´‡≥ã‡≤®‡≥ç: {reg.phone}</p>
                      {reg.place && <p>‡≤∏‡≥ç‡≤•‡≤≥: {reg.place}</p>}
                      {reg.teamName && <p>‡≤§‡≤Ç‡≤°: {reg.teamName}</p>}
                      <p>‡≤®‡≥ã‡≤Ç‡≤¶‡≤£‡≤ø ‡≤¶‡≤ø‡≤®‡≤æ‡≤Ç‡≤ï: {reg.registrationDate}</p>
                    </div>
                  ))}
                </div>
              )}
            </>
          )}
        </div>
      </div>
    );
  };
  

  return (
    <div className="app">
      {currentView === 'home' && <HomePage />}
      {currentView === 'menu' && <MainMenu />}
      {currentView === 'registration' && <GameRegistration yy=""/>}
      {currentView === 'admin-login' && <AdminLogin />}
      {currentView === 'kambala' && <GameRegistration yy="kambala" />}
      {currentView === 'admin' && isAdminAuthenticated && <AdminView />}
    </div>
  );
};

export default App;
